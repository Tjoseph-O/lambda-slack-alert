name: Deploy Power Alerts Lambda

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest boto3 pymongo requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        # Run any tests you have
        python -m pytest tests/ -v || echo "No tests found, skipping..."
        
        # Basic syntax check
        python -c "import lambda_function; print('✅ Lambda function syntax OK')"
        
        # Test imports
        python -c "
        try:
            from lambda_function import get_report_period, test_locally
            print('✅ Function imports OK')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Set up SAM CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Build SAM application
      run: sam build
    
    - name: Deploy to Development
      run: |
        sam deploy \
          --stack-name power-alerts-dev \
          --parameter-overrides Stage=dev \
          --capabilities CAPABILITY_IAM \
          --resolve-s3 \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset
    
    - name: Test Development Deployment
      run: |
        echo "Testing development deployment..."
        aws lambda invoke \
          --function-name power-transaction-monitor-dev \
          --payload '{}' \
          test-output.json
        
        cat test-output.json
        
        # Check if deployment was successful
        if grep -q "successfully" test-output.json; then
          echo "✅ Development deployment test passed"
        else
          echo "❌ Development deployment test failed"
          exit 1
        fi

  deploy-prod:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Set up SAM CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Build SAM application
      run: sam build
    
    - name: Deploy to Production
      run: |
        sam deploy \
          --stack-name power-alerts-prod \
          --parameter-overrides Stage=prod \
          --capabilities CAPABILITY_IAM \
          --resolve-s3 \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset
    
    - name: Test Production Deployment
      run: |
        echo "Testing production deployment..."
        aws lambda invoke \
          --function-name power-transaction-monitor-prod \
          --payload '{}' \
          test-output.json
        
        cat test-output.json
        
        # Send success notification to Slack
        aws lambda invoke \
          --function-name power-transaction-monitor-prod \
          --payload '{"test": true}' \
          /dev/null
        
        echo "✅ Production deployment completed successfully"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Check for secrets in code
        if grep -r "AKIA\|aws_secret\|password\|token" --exclude-dir=.git --exclude="*.md" .; then
          echo "❌ Potential secrets found in code!"
          exit 1
        else
          echo "✅ No secrets found in code"
        fi
        
        # Check for hardcoded IPs or URLs (excluding webhook URLs in docs)
        if grep -r "http://\|192\.168\|10\.\|172\." --exclude-dir=.git --exclude="*.md" --exclude="*.yml" --exclude="*.yaml" .; then
          echo "⚠️ Hardcoded URLs or IPs found - please review"
        else
          echo "✅ No hardcoded URLs or IPs found"
        fi