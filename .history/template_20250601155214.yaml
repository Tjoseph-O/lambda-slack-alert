# Backup current template
cp template.yaml template-backup.yaml

# Copy the updated template
cat > template.yaml << 'EOF'
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Power Transaction Revenue Alerts System

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues: [dev, prod]
    Description: Deployment stage

Globals:
  Function:
    Runtime: python3.12
    Timeout: 300
    MemorySize: 512
    Environment:
      Variables:
        STAGE: !Ref Stage

Resources:
  # Main Power Transaction Monitor Function
  PowerTransactionMonitor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'power-transaction-monitor-${Stage}'
      CodeUri: .
      Handler: lambda_function.lambda_handler
      Description: 'Monitor power transactions and send revenue reports'
      Environment:
        Variables:
          MONGODB_PARAM_BASE: !Sub '/power-alerts/${Stage}/mongodb'
          SLACK_SECRET_NAME: !Sub 'power-alerts/${Stage}/slack-webhook'
      Events:
        MidnightNigeriaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 23 * * ? *)
            Description: 'Run at 12 AM Nigeria time (23:00 UTC)'
        SixAMNigeriaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 5 * * ? *)
            Description: 'Run at 6 AM Nigeria time (05:00 UTC)'
        NoonNigeriaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 11 * * ? *)
            Description: 'Run at 12 PM Nigeria time (11:00 UTC)'
        SixPMNigeriaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 17 * * ? *)
            Description: 'Run at 6 PM Nigeria time (17:00 UTC)'
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/power-alerts/${Stage}/*'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:power-alerts/${Stage}/*'

  ManualTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'power-transaction-manual-${Stage}'
      CodeUri: .
      Handler: manual_handler.lambda_handler
      Description: 'Manual test and check function'
      Environment:
        Variables:
          MONGODB_PARAM_BASE: !Sub '/power-alerts/${Stage}/mongodb'
          SLACK_SECRET_NAME: !Sub 'power-alerts/${Stage}/slack-webhook'
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/power-alerts/${Stage}/*'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:power-alerts/${Stage}/*'

Outputs:
  PowerTransactionMonitorArn:
    Description: 'Power Transaction Monitor Lambda Function ARN'
    Value: !GetAtt PowerTransactionMonitor.Arn
